services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saas-planner-db
    environment:
      POSTGRES_DB: saas_planner
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: saas-planner-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://admin:password123@postgres:5432/saas_planner
      ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    restart: unless-stopped
    command: npm run dev

  # Frontend (Next.js)
  frontend:
    image: node:20-alpine
    container_name: saas-planner-frontend
    working_dir: /app
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    restart: unless-stopped

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: saas-planner-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data: